// src/components/bitacora/BitacoraContent.jsx
import BitacoraSection from "./BitacoraSection";

export default function BitacoraContent() {
  const sections = [
    {
      title: "üìÖ Cronolog√≠a del Desarrollo",
      items: [
        "Semana 1: An√°lisis del proyecto TP1 original y planificaci√≥n de la arquitectura en React",
        "Semana 1: Setup inicial del proyecto con Vite + React + React Router DOM",
        "Semana 2: Migraci√≥n de la estructura HTML a componentes React reutilizables",
        "Semana 2: Implementaci√≥n del Sidebar persistente y sistema de rutas b√°sicas",
        "Semana 3: Desarrollo de perfiles individuales con total personalizaci√≥n por miembro",
        "Semana 3: Creaci√≥n de la galer√≠a de anti-h√©roes con datos desde JSON local (20+ objetos)",
        "Semana 3: Implementaci√≥n de b√∫squeda y filtros en tiempo real",
        "Semana 4: Integraci√≥n con TVMaze API para consumo de datos externos",
        "Semana 4: Desarrollo de paginaci√≥n del lado del cliente para la API",
        "Semana 4: Creaci√≥n de diagramas de arquitectura (√°rbol de componentes y estructura de carpetas)",
        "Semana 4: Optimizaci√≥n responsive en 3 breakpoints (m√≥vil, tablet, desktop)",
        "Semana 4: Deploy en Vercel y ajustes finales de documentaci√≥n",
      ],
    },
    {
      title: "üë• Divisi√≥n de Tareas por Miembro",
      items: [
        "Germ√°n (Full Stack): Setup inicial con Vite, configuraci√≥n de rutas, integraci√≥n con TVMaze API, deploy en Vercel",
        "Juan (Full Stack): Dise√±o del Sidebar, HomePage con HeroSection, galer√≠a JSON de anti-h√©roes, sistema de b√∫squeda y filtros",
        "Manuel (Backend): Manejo de estados as√≠ncronos, integraci√≥n de API REST, optimizaci√≥n de rendimiento, documentaci√≥n t√©cnica",
        "Nicol√°s (Project Manager): Coordinaci√≥n del equipo, control de versiones en Git, creaci√≥n de diagramas de arquitectura, redacci√≥n de README y bit√°cora",
        "Todo el equipo: Desarrollo individual de perfiles personalizados con total libertad creativa",
        "Todo el equipo: Revisiones de c√≥digo y testing de funcionalidades en diferentes dispositivos",
      ],
    },
    {
      title: "üöß Desaf√≠os Encontrados y Soluciones",
      items: [
        "DESAF√çO: Migraci√≥n de estilos CSS globales con BEM a CSS-in-JS por componente ‚Üí SOLUCI√ìN: Creamos archivos *Styles.js para cada componente reutilizable",
        "DESAF√çO: Evitar prop drilling al compartir datos entre componentes ‚Üí SOLUCI√ìN: Implementamos custom hooks y levantamos el estado cuando fue necesario",
        "DESAF√çO: Rutas din√°micas para perfiles individuales personalizados ‚Üí SOLUCI√ìN: Usamos rutas param√©tricas /profile/:id con mapeo de componentes",
        "DESAF√çO: API sin paginaci√≥n del lado del servidor ‚Üí SOLUCI√ìN: Implementamos paginaci√≥n del lado del cliente con estados de carga",
        "DESAF√çO: Trabajo en paralelo sin conflictos de Git ‚Üí SOLUCI√ìN: Carpetas individuales por miembro para perfiles, cada uno con total independencia",
        "DESAF√çO: Mantener consistencia visual entre perfiles personalizados ‚Üí SOLUCI√ìN: Guidelines de dise√±o compartidos pero implementaci√≥n libre",
        "DESAF√çO: Transici√≥n de sitio multip√°gina a SPA sin perder funcionalidad ‚Üí SOLUCI√ìN: React Router con Outlet para navegaci√≥n sin recargas",
      ],
    },
    {
      title: "üí° Aprendizajes Clave del Equipo",
      items: [
        "Pensamiento en componentes: Identificar elementos reutilizables mejora dram√°ticamente la mantenibilidad del c√≥digo",
        "React Router: Las SPAs ofrecen mejor UX que sitios multip√°gina tradicionales (sin recargas, transiciones fluidas)",
        "Gesti√≥n de estado: useState y useEffect son fundamentales para manejar datos din√°micos y efectos secundarios",
        "Fetch de APIs: Importancia del manejo correcto de promesas, estados de carga (loading) y errores (error handling)",
        "CSS-in-JS: Estilos encapsulados por componente previenen conflictos de nombres y facilitan el mantenimiento",
        "Vite: Build tool moderno con HMR ultra-r√°pido vs webpack tradicional (mejora significativa en developer experience)",
        "Hooks personalizados: Extraer l√≥gica reutilizable en custom hooks (ej: useMediaQuery) reduce duplicaci√≥n de c√≥digo",
        "Git workflow: Trabajo en carpetas independientes permite paralelizaci√≥n sin merge conflicts constantes",
      ],
    },
    {
      title: "üîß Decisiones T√©cnicas Importantes",
      items: [
        "DECISI√ìN: Vite sobre Create React App ‚Üí RAZ√ìN: Tiempo de inicio 10x m√°s r√°pido, HMR instant√°neo, build optimizado con Rollup",
        "DECISI√ìN: CSS-in-JS sobre m√≥dulos CSS ‚Üí RAZ√ìN: Estilos co-ubicados con componentes, no requiere configuraci√≥n adicional, menor curva de aprendizaje",
        "DECISI√ìN: Perfiles independientes por carpeta ‚Üí RAZ√ìN: Evita conflictos en Git, creatividad total por miembro, facilita merge de cambios",
        "DECISI√ìN: React Router DOM v7 ‚Üí RAZ√ìN: Soporte moderno de rutas, Outlet para layouts persistentes, API simplificada",
        "DECISI√ìN: Estructura por funcionalidad vs por tipo ‚Üí RAZ√ìN: Carpetas como /antiheroes/, /api-data/ agrupan todo lo relacionado (componentes, estilos, l√≥gica)",
        "DECISI√ìN: JSON local + API externa ‚Üí RAZ√ìN: Demostrar manejo de datos est√°ticos y din√°micos, diferentes patrones de consumo",
        "DECISI√ìN: Paginaci√≥n del lado del cliente ‚Üí RAZ√ìN: La API de TVMaze no ofrece paginaci√≥n, implementamos control total del UX",
      ],
    },
    {
      title: "üé® Caracter√≠sticas de Dise√±o Implementadas",
      items: [
        "Tema oscuro (dark mode) como identidad visual del proyecto con degradados sutiles",
        "Tipograf√≠a Creepster para t√≠tulos principales, creando atm√≥sfera oscura y dram√°tica",
        "Sidebar fijo con navegaci√≥n vertical para acceso r√°pido a todas las secciones",
        "Dise√±o responsive con 3 breakpoints: m√≥vil (<768px), tablet (768-1024px), desktop (>1024px)",
        "Componentes modulares y reutilizables siguiendo principios SOLID de React",
        "Transiciones suaves entre rutas sin recargas de p√°gina (experiencia SPA)",
        "Cards con efectos hover y animaciones CSS para mejorar interactividad",
      ],
    },
    {
      title: "üìä Datos y APIs Utilizadas",
      items: [
        "Archivo antiheroes.json con 20+ objetos de anti-h√©roes (Marvel, DC, The Boys, Invincible, etc.)",
        "TVMaze API p√∫blica para obtener datos de series en tiempo real (https://www.tvmaze.com/api)",
        "Sistema de b√∫squeda en tiempo real filtrando por nombre de personaje",
        "Filtros por universo (Marvel, DC, The Boys, Invincible, Otros) para la galer√≠a JSON",
        "Paginaci√≥n con 12 resultados por p√°gina para la secci√≥n de API",
        "Manejo de estados: loading (cargando), error (fall√≥ la petici√≥n), success (datos cargados)",
      ],
    },
    {
      title: "üèóÔ∏è Arquitectura del Proyecto",
      items: [
        "App.jsx ‚Üí AppRouter ‚Üí Layout (con Outlet) ‚Üí P√°ginas espec√≠ficas",
        "Layout persistente: Sidebar y Footer visibles en todas las rutas",
        "containers/pages/ - Componentes de p√°gina que ensamblan la UI completa",
        "components/ - Componentes reutilizables organizados por feature (api-data, antiheroes, home, etc.)",
        "data/ - Archivos JSON y configuraciones (antiheroes.json, navigation.js)",
        "hooks/ - Custom Hooks con l√≥gica reutilizable (useMediaQuery para responsive)",
        "router/ - Configuraci√≥n central de rutas con React Router DOM",
        "Cada perfil en carpeta independiente: *Profile.jsx, *Data.js, *Styles.js",
      ],
    },
    {
      title: "üì¶ Tecnolog√≠as y Dependencias",
      items: [
        "React 19.1 - Librer√≠a principal para construcci√≥n de UI",
        "React DOM 19.1 - Renderizado en el navegador",
        "React Router DOM 7.9 - Sistema de rutas SPA",
        "Vite 7.1 - Build tool y dev server ultra-r√°pido",
        "ESLint 9 - Linter para mantener calidad de c√≥digo",
        "Vercel - Plataforma de deployment con CI/CD autom√°tico",
        "Git & GitHub - Control de versiones y colaboraci√≥n del equipo",
      ],
    },
    {
      title: "‚úÖ Cumplimiento de Consignas del TP2",
      items: [
        "‚úì Migraci√≥n completa de sitio est√°tico (TP1) a SPA con React",
        "‚úì Sidebar con logo y men√∫ vertical funcional en todos los dispositivos",
        "‚úì Secci√≥n portada con presentaci√≥n del equipo (HomePage)",
        "‚úì Bit√°cora documentando el proceso de desarrollo (esta secci√≥n)",
        "‚úì Secci√≥n individual por cada integrante con perfiles personalizados",
        "‚úì Secci√≥n con datos desde JSON local (antiheroes.json con 20+ objetos)",
        "‚úì Secci√≥n con datos desde API p√∫blica (TVMaze API con manejo de estados)",
        "‚úì √Årbol de renderizado mostrando jerarqu√≠a completa de componentes",
        "‚úì Diagrama de organizaci√≥n de carpetas del proyecto",
        "‚úì React Router implementado en todas las secciones",
        "‚úì Dise√±o responsive con 3 puntos de quiebre",
        "‚úì Componentizaci√≥n con elementos reutilizables",
        "‚úì README.md actualizado con documentaci√≥n completa",
        "‚úì Repositorio en GitHub con commits organizados",
        "‚úì Deploy funcional en Vercel (pr√≥ximamente)",
      ],
    },
  ];

  return (
    <section style={styles.container}>
      <div style={styles.header}>
        <h1 style={styles.title}>üìî Bit√°cora del Proyecto</h1>
        <p style={styles.subtitle}>
          Documentaci√≥n completa del proceso de migraci√≥n de HTML/CSS/JS a React SPA
        </p>
        <p style={styles.team}>
          Grupo 3 - Germ√°n, Juan, Manuel, Nicol√°s
        </p>
      </div>

      <div style={styles.content}>
        {sections.map((section, index) => (
          <BitacoraSection
            key={index}
            title={section.title}
            items={section.items}
          />
        ))}
      </div>

      <div style={styles.footer}>
        <p style={styles.footerText}>
          Esta bit√°cora documenta el trabajo colaborativo del Grupo 3 en el desarrollo 
          del TP2 de Frontend, cumpliendo con todos los requisitos solicitados.
        </p>
        <p style={styles.footerDate}>
          Proyecto completado - 2025
        </p>
      </div>
    </section>
  );
}

const styles = {
  container: {
    margin: "0 auto",
    padding: "60px 40px",
    minHeight: "100vh",
    background: "linear-gradient(135deg, #1a1a1a 0%, #2a1a1a 100%)",
  },
  header: {
    textAlign: "center",
    marginBottom: "50px",
    padding: "30px",
    background: "rgba(139, 0, 0, 0.15)",
    border: "2px solid #8b0000",
    borderRadius: "12px",
  },
  title: {
    fontSize: "48px",
    color: "#ff6666",
    marginBottom: "15px",
    fontWeight: "700",
    fontFamily: "'Creepster', cursive",
  },
  subtitle: {
    fontSize: "18px",
    color: "#b0b0b0",
    marginBottom: "10px",
    lineHeight: "1.6",
  },
  team: {
    fontSize: "16px",
    color: "#4dabf7",
    fontWeight: "600",
    marginTop: "10px",
  },
  content: {
    display: "flex",
    flexDirection: "column",
    gap: "30px",
  },
  footer: {
    marginTop: "60px",
    padding: "30px",
    textAlign: "center",
    background: "rgba(77, 171, 247, 0.1)",
    border: "2px solid #4dabf7",
    borderRadius: "12px",
  },
  footerText: {
    fontSize: "16px",
    color: "#b0b0b0",
    lineHeight: "1.8",
    marginBottom: "15px",
  },
  footerDate: {
    fontSize: "14px",
    color: "#4dabf7",
    fontWeight: "600",
  },
};